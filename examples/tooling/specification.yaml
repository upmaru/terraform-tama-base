---
components:
  schemas:
    Error:
      description: Error response schema
      properties:
        code:
          description: The error code
          type: string
        message:
          description: The error message
          type: string
      required:
        - message
        - code
      type: object
    Profile:
      description: |
        Profile for a given actor in a system.

        ## Important
        - DO NOT use empty values like "" instead simply do not include the keys if you do not have a value.
      properties:
        dates:
          items:
            properties:
              index:
                type: integer
              significance:
                enum:
                  - wedding
                  - birth
                  - start_school
                  - graduated
                type: string
              value:
                format: date
                type: string
            required:
              - index
              - significance
              - value
            type: object
          type: array
        gender:
          description: This is required default to `other` if not provided.
          enum:
            - male
            - female
            - other
          type: string
        names:
          description: |
            The names of the actor.

            A Name like 'Zack Siri' will be split into the following structure:

            ```json
            [
              {"index": 0, "group": "real", "value": "Zack"},
              {"index": 1, "group": "real", "value": "Siri"}
            ]
            ```

            If the user specifically mentioned "you can call me 'Zack'" or something along this line it should be recorded as:

            ```json
            [
              {"index": 0, "group": "real", "value": "Zack"},
              {"index": 1, "group": "real", "value": "Siri"},
              {"index": 0, "group": "callable", "value": "Zack"}
            ]
            ```
          items:
            properties:
              group:
                enum:
                  - callable
                  - real
                type: string
              index:
                type: integer
              value:
                type: string
            required:
              - index
              - value
            type: object
          type: array
        pronoun:
          description: This is required default to `other` if not provided.
          enum:
            - he/him
            - she/her
            - they/them
            - other
          type: string
      required:
        - names
      title: profile
      type: object
info:
  description: API for personalization data.
  title: Personalization API
  version: 1.0.0
openapi: 3.1.0
paths:
  "/profile/{actor_id}":
    get:
      description: Returns the profile for a given actor in a system.
      operationId: get-profile
      parameters:
        - description: The ID of the entity
          in: path
          name: actor_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Profile"
          description: A profile object
        "404":
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
          description: Entity not found
      summary: Get profile for a given actor in a system
      tags:
        - Personalization
    put:
      description: "Create or update the profile for a given actor in a system.

        "
      operationId: create-or-update-profile
      parameters:
        - description: The ID of the actor
          in: path
          name: actor_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Profile"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Profile"
          description: Profile updated successfully
        "404":
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
          description: Entity not found
      summary: |
        Create or update the profile for a given actor in a system.

        ## Important
        - DO NOT use empty values like "" instead simply do not include the keys if you do not have a value.
      tags:
        - Personalization
servers:
  - description: Internal Personalization Endpoint
    url: "/internal/personalization"
